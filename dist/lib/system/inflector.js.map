{"version":3,"file":"inflector.js","sources":["../../../src/lib/system/inflector.js"],"sourcesContent":["/* eslint-disable import/extensions, prettier/prettier */\nimport defaultRules from './inflections';\n\nconst BLANK_REGEX = /^\\s*$/;\nconst LAST_WORD_DASHED_REGEX = /([\\w/-]+[_/\\s-])([a-z\\d]+$)/;\nconst LAST_WORD_CAMELIZED_REGEX = /([\\w/\\s-]+)([A-Z][a-z\\d]*$)/;\nconst CAMELIZED_REGEX = /[A-Z][a-z\\d]*$/;\nconst CAPITALIZE_REGEX = /(^|\\/)([a-z\\u00C0-\\u024F])/g;\n\nfunction capitalize(str) {\n  return str.replace(CAPITALIZE_REGEX, (match) => match.toUpperCase());\n}\n\nfunction loadUncountable(rules, uncountable) {\n  for (let i = 0, length = uncountable.length; i < length; i++) {\n    rules.uncountable[uncountable[i].toLowerCase()] = true;\n  }\n}\n\nfunction loadIrregular(rules, irregularPairs) {\n  let pair;\n\n  for (let i = 0, length = irregularPairs.length; i < length; i++) {\n    pair = irregularPairs[i];\n\n    //pluralizing\n    rules.irregular[pair[0].toLowerCase()] = pair[1];\n    rules.irregular[pair[1].toLowerCase()] = pair[1];\n\n    //singularizing\n    rules.irregularInverse[pair[1].toLowerCase()] = pair[0];\n    rules.irregularInverse[pair[0].toLowerCase()] = pair[0];\n  }\n}\n\n/**\n  Inflector.Ember provides a mechanism for supplying inflection rules for your\n  application. Ember includes a default set of inflection rules, and provides an\n  API for providing additional rules.\n\n  Examples:\n\n  Creating an inflector with no rules.\n\n  ```js\n  var inflector = new Ember.Inflector();\n  ```\n\n  Creating an inflector with the default ember ruleset.\n\n  ```js\n  var inflector = new Ember.Inflector(Ember.Inflector.defaultRules);\n\n  inflector.pluralize('cow'); //=> 'kine'\n  inflector.singularize('kine'); //=> 'cow'\n  ```\n\n  Creating an inflector and adding rules later.\n\n  ```javascript\n  var inflector = Ember.Inflector.inflector;\n\n  inflector.pluralize('advice'); // => 'advices'\n  inflector.uncountable('advice');\n  inflector.pluralize('advice'); // => 'advice'\n\n  inflector.pluralize('formula'); // => 'formulas'\n  inflector.irregular('formula', 'formulae');\n  inflector.pluralize('formula'); // => 'formulae'\n\n  // you would not need to add these as they are the default rules\n  inflector.plural(/$/, 's');\n  inflector.singular(/s$/i, '');\n  ```\n\n  Creating an inflector with a nondefault ruleset.\n\n  ```javascript\n  var rules = {\n    plurals:  [\n      [ /$/, 's' ]\n    ],\n    singular: [\n      [ /\\s$/, '' ]\n    ],\n    irregularPairs: [\n      [ 'cow', 'kine' ]\n    ],\n    uncountable: [ 'fish' ]\n  };\n\n  var inflector = new Ember.Inflector(rules);\n  ```\n\n  @class Inflector\n  @namespace Ember\n*/\nfunction Inflector(ruleSet) {\n  ruleSet = ruleSet || {};\n  ruleSet.uncountable = ruleSet.uncountable || makeDictionary();\n  ruleSet.irregularPairs = ruleSet.irregularPairs || makeDictionary();\n\n  const rules = (this.rules = {\n    plurals: ruleSet.plurals || [],\n    singular: ruleSet.singular || [],\n    irregular: makeDictionary(),\n    irregularInverse: makeDictionary(),\n    uncountable: makeDictionary(),\n  });\n\n  loadUncountable(rules, ruleSet.uncountable);\n  loadIrregular(rules, ruleSet.irregularPairs);\n\n  this.enableCache();\n}\n\nif (!Object.create && !Object.create(null).hasOwnProperty) {\n  throw new Error(\n    'This browser does not support Object.create(null), please polyfil with es5-sham: http://git.io/yBU2rg'\n  );\n}\n\nfunction makeDictionary() {\n  var cache = Object.create(null);\n  cache['_dict'] = null;\n  delete cache['_dict'];\n  return cache;\n}\n\nInflector.prototype = {\n  /**\n    @public\n\n    As inflections can be costly, and commonly the same subset of words are repeatedly\n    inflected an optional cache is provided.\n\n    @method enableCache\n  */\n  enableCache() {\n    this.purgeCache();\n\n    this.singularize = function (word) {\n      this._cacheUsed = true;\n      return (\n        this._sCache[word] || (this._sCache[word] = this._singularize(word))\n      );\n    };\n\n    this.pluralize = function (numberOrWord, word, options = {}) {\n      this._cacheUsed = true;\n      var cacheKey = [numberOrWord, word, options.withoutCount];\n      return (\n        this._pCache[cacheKey] ||\n        (this._pCache[cacheKey] = this._pluralize(numberOrWord, word, options))\n      );\n    };\n  },\n\n  /**\n    @public\n\n    @method purgeCache\n  */\n  purgeCache() {\n    this._cacheUsed = false;\n    this._sCache = makeDictionary();\n    this._pCache = makeDictionary();\n  },\n\n  /**\n    @public\n    disable caching\n\n    @method disableCache;\n  */\n  disableCache() {\n    this._sCache = null;\n    this._pCache = null;\n    this.singularize = function (word) {\n      return this._singularize(word);\n    };\n\n    this.pluralize = function () {\n      return this._pluralize(...arguments);\n    };\n  },\n\n  /**\n    @method plural\n    @param {RegExp} regex\n    @param {String} string\n  */\n  plural(regex, string) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    this.rules.plurals.push([regex, string.toLowerCase()]);\n  },\n\n  /**\n    @method singular\n    @param {RegExp} regex\n    @param {String} string\n  */\n  singular(regex, string) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    this.rules.singular.push([regex, string.toLowerCase()]);\n  },\n\n  /**\n    @method uncountable\n    @param {String} regex\n  */\n  uncountable(string) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    loadUncountable(this.rules, [string.toLowerCase()]);\n  },\n\n  /**\n    @method irregular\n    @param {String} singular\n    @param {String} plural\n  */\n  irregular(singular, plural) {\n    if (this._cacheUsed) {\n      this.purgeCache();\n    }\n    loadIrregular(this.rules, [[singular, plural]]);\n  },\n\n  /**\n    @method pluralize\n    @param {String} word\n  */\n  pluralize() {\n    return this._pluralize(...arguments);\n  },\n\n  _pluralize(wordOrCount, word, options = {}) {\n    if (word === undefined) {\n      return this.inflect(\n        wordOrCount,\n        this.rules.plurals,\n        this.rules.irregular\n      );\n    }\n\n    if (parseFloat(wordOrCount) !== 1) {\n      word = this.inflect(word, this.rules.plurals, this.rules.irregular);\n    }\n\n    return options.withoutCount ? word : `${wordOrCount} ${word}`;\n  },\n\n  /**\n    @method singularize\n    @param {String} word\n  */\n  singularize(word) {\n    return this._singularize(word);\n  },\n\n  _singularize(word) {\n    return this.inflect(word, this.rules.singular, this.rules.irregularInverse);\n  },\n\n  /**\n    @protected\n\n    @method inflect\n    @param {String} word\n    @param {Object} typeRules\n    @param {Object} irregular\n  */\n  inflect(word, typeRules, irregular) {\n    let inflection,\n      substitution,\n      result,\n      lowercase,\n      wordSplit,\n      lastWord,\n      isBlank,\n      isCamelized,\n      rule,\n      isUncountable;\n\n    isBlank = !word || BLANK_REGEX.test(word);\n    isCamelized = CAMELIZED_REGEX.test(word);\n\n    if (isBlank) {\n      return word;\n    }\n\n    lowercase = word.toLowerCase();\n    wordSplit =\n      LAST_WORD_DASHED_REGEX.exec(word) || LAST_WORD_CAMELIZED_REGEX.exec(word);\n\n    if (wordSplit) {\n      lastWord = wordSplit[2].toLowerCase();\n    }\n\n    isUncountable =\n      this.rules.uncountable[lowercase] || this.rules.uncountable[lastWord];\n\n    if (isUncountable) {\n      return word;\n    }\n\n    for (rule in irregular) {\n      if (lowercase.match(rule + '$')) {\n        substitution = irregular[rule];\n\n        if (isCamelized && irregular[lastWord]) {\n          substitution = capitalize(substitution);\n          rule = capitalize(rule);\n        }\n\n        return word.replace(new RegExp(rule, 'i'), substitution);\n      }\n    }\n\n    for (var i = typeRules.length, min = 0; i > min; i--) {\n      inflection = typeRules[i - 1];\n      rule = inflection[0];\n\n      if (rule.test(word)) {\n        break;\n      }\n    }\n\n    inflection = inflection || [];\n\n    rule = inflection[0];\n    substitution = inflection[1];\n\n    result = word.replace(rule, substitution);\n\n    return result;\n  },\n};\n\nInflector.defaultRules = defaultRules;\nInflector.inflector = new Inflector(defaultRules);\n\nexport default Inflector;\n"],"names":["BLANK_REGEX","LAST_WORD_DASHED_REGEX","LAST_WORD_CAMELIZED_REGEX","CAMELIZED_REGEX","CAPITALIZE_REGEX","capitalize","str","replace","match","toUpperCase","loadUncountable","rules","uncountable","i","length","toLowerCase","loadIrregular","irregularPairs","pair","irregular","irregularInverse","Inflector","ruleSet","makeDictionary","plurals","singular","enableCache","Object","create","hasOwnProperty","Error","cache","prototype","purgeCache","singularize","word","_cacheUsed","_sCache","_singularize","pluralize","numberOrWord","options","cacheKey","withoutCount","_pCache","_pluralize","disableCache","arguments","plural","regex","string","push","wordOrCount","undefined","inflect","parseFloat","typeRules","inflection","substitution","result","lowercase","wordSplit","lastWord","isBlank","isCamelized","rule","isUncountable","test","exec","RegExp","min","defaultRules","inflector"],"mappings":"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"}